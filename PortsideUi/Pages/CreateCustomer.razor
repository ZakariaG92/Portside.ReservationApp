@page "/createcustomer"
@using PortsideUi.Services.Interfaces
@using Portside.Entities.Model
@using AutoMapper
@using Portside.Persistance.Model
@inject ICustomerService _customerService
@inject NavigationManager _navManager
@inject IMapper _Mapper

<h1>Create Customer</h1>

<EditForm Model="customerDto" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="FirstName">First Name</label>
        <InputText id="FirstName" @bind-Value="customerDto.FirstName" class="form-control"  required />
    </div>

    <div class="form-group">
        <label for="LastName">Last Name</label>
        <InputText id="LastName" @bind-Value="customerDto.LastName" class="form-control"  required />
    </div>

    <div class="form-group">
        <label for="Email">Email</label>
        <InputText id="Email" @bind-Value="customerDto.Email" class="form-control"  required />
    </div>

    <div class="form-group">
        <label for="Phone">Phone</label>
        <InputText id="Phone" @bind-Value="customerDto.Phone" class="form-control"  required />
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
    <button class="btn btn-danger" @onclick="NavigateToCustomers">Cancel</button>
</EditForm>

@code {
    private CustomerDto customerDto = new CustomerDto();

    private async Task HandleValidSubmit()
    {
        var customer = _Mapper.Map<Customer>(customerDto);
        await _customerService.AddCustomerAsync(customer);
        NavigateToCustomers();
    }

    private void NavigateToCustomers()
    {
        _navManager.NavigateTo("/customers");
    }
}