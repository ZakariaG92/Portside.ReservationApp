@page "/createreservation/{customerId}"
@using PortsideUi.Services.Interfaces
@using Portside.Entities.Model
@using AutoMapper
@using Portside.Persistance.Model
@inject NavigationManager _navManager
@inject IReservationService _reservationService
@inject IMapper _Mapper

<h2>Create Reservation</h2>

<EditForm Model="reservationDto" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="Departure">Departure</label>
        <InputText id="Departure" @bind-Value="reservationDto.Departure" class="form-control" required />
    </div>

    <div class="form-group">
        <label for="Destination">Destination</label>
        <InputText id="Destination" @bind-Value="reservationDto.Destination" class="form-control" required />
    </div>

    <div class="form-group">
        <label for="FlightDate">Flight Date</label>
        <InputDate id="FlightDate" @bind-Value="reservationDto.FlightDate" class="form-control" required />
    </div>

    <div class="form-group">
        <label for="Price">Price</label>
        <InputNumber id="Price" @bind-Value="reservationDto.Price" class="form-control" required />
    </div>

    <button class="btn btn-primary">Create</button>
</EditForm>

@code {
    [Parameter] public string CustomerId { get; set; }
    private ReservationDto reservationDto { get; set; }
    private string customerId;

    protected override void OnInitialized()
    {
        reservationDto = new ReservationDto
        {
            CustomerId = CustomerId
        };
    }

    private void HandleValidSubmit()
    {
        var reservation = _Mapper.Map<Reservation>(reservationDto);
        _reservationService.AddReservationAsync(reservation);
        _navManager.NavigateTo($"/reservations/{CustomerId}");
    }
}
